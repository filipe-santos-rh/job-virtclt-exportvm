apiVersion: v1
kind: Namespace
metadata:
  name: image-extract
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: os-image-extract-script
  namespace: image-extract
data:
  import-script.sh: |
    #!/bin/sh
    IMAGES_DIR=/demo/data/
    PROJECT_NAME=image-extract
    IMAGE_EXPORT_NAME=win2k19-template
    DELETE_VM="--DELETE_VMe"
    PVC_NAME=
    mkdir -p ${IMAGES_DIR}
    echo "List the content of the export folder"
    ls -la ${IMAGES_DIR}
    echo "switching to the project ${PROJECT_NAME}"
    oc project ${PROJECT_NAME}
    echo "starting the process of extracting the disk"
    virtctl vmexport create ${IMAGE_EXPORT_NAME} --pvc ${PVC_NAME}
    virtctl vmexport download ${IMAGE_EXPORT_NAME} --output ${IMAGES_DIR}/${IMAGE_EXPORT_NAME}.gz --insecure --pvc ${PVC_NAME}
    echo "List the content of the export folder"
    ls -la ${IMAGES_DIR}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: image-extract-sa
  namespace: image-extract
---
apiVersion: v1
kind: Secret
metadata:
  name: secret-win2k19-template
stringData:
  token: oijnbgt543sfgh9
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: image-extract-admin
  namespace: image-extract
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: image-extract-sa
  namespace: image-extract
---
apiVersion: batch/v1
kind: Job
metadata:
  name: os-image-extract
  namespace: image-extract
spec:
  template:
    spec:
      volumes:
      - name: script
        configMap:
          name: os-image-extract-script
      - name: nfs-data
        persistentVolumeClaim:
          claimName: nfs-pvc
      serviceAccountName: image-extract-sa
      containers:
        - name: os-image-extract
          image: 'registry.redhat.io/web-terminal/web-terminal-tooling-rhel9@sha256:56d0e658242cc58de43792b658cad00978bb26acca8f8c52f9a6efaae0319306'
          volumeMounts:
            - name: script
              mountPath: /usr/os-image-extract
            - name: nfs-data
              mountPath: /demo/data
          command:
          - /bin/sh
          - /usr/os-image-extract/import-script.sh
          imagePullPolicy: IfNotPresent
      restartPolicy: Never